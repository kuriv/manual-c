{"./":{"url":"./","title":"C","keywords":"","body":"C C 是一种通用程序设计语言，广泛用于系统软件与应用软件的开发。 "},"docs/一切的开始.html":{"url":"docs/一切的开始.html","title":"一切的开始","keywords":"","body":"一切的开始 以下是第一个 C 语言程序，也是一切的开始。 #include int main(int argc, char const *argv[]) { printf(\"Hello World!\\n\"); return 0; } "},"docs/类型、运算符与表达式.html":{"url":"docs/类型、运算符与表达式.html","title":"类型、运算符与表达式","keywords":"","body":"类型、运算符与表达式 变量名 数据类型 常量 "},"docs/类型、运算符与表达式/变量名.html":{"url":"docs/类型、运算符与表达式/变量名.html","title":"变量名","keywords":"","body":"变量名 C 语言变量名是由字母、数字和下划线组成的序列，但其第一个字符必须为字母，且严格区分大小写。 类似于 if 、 else 、 int 、 float 等关键字是保留给 C 语言本身使用的，不能用作变量名。 "},"docs/类型、运算符与表达式/数据类型.html":{"url":"docs/类型、运算符与表达式/数据类型.html","title":"数据类型","keywords":"","body":"数据类型 C 语言提供了下列几种基本数据类型。 #include int main(int argc, char const *argv[]) { char a = 'A'; // 字符型，占用一个字节，可以存放本地字符集中的一个字符 printf(\"%c\\n\", a); int b = 233; // 整型，通常反映所用机器中整数的最自然长度 printf(\"%d\\n\", b); float c = 123.456; // 单精度浮点型 printf(\"%f\\n\", c); double d = 123.456; // 双精度浮点型 printf(\"%lf\\n\", d); return 0; } 此外，还有 signed 与 unsigned 等类型限定符。 "},"docs/类型、运算符与表达式/常量.html":{"url":"docs/类型、运算符与表达式/常量.html","title":"常量","keywords":"","body":"常量 类似于 233 的整数常量属于 int 类型。 #include int main(int argc, char const *argv[]) { printf(\"%d\\n\", 233); return 0; } long 类型的常量以字母 l 或 L 结尾。 #include int main(int argc, char const *argv[]) { printf(\"%d\\n\", 123456789L); return 0; } 无符号常量以字母 u 或 U 结尾。 #include int main(int argc, char const *argv[]) { printf(\"%d\\n\", 233U); return 0; } 后缀 ul 或 UL 表明是 unsigned long 类型。 #include int main(int argc, char const *argv[]) { printf(\"%d\\n\", 123456789UL); return 0; } 浮点数常量中包含一个小数点，如 123.4 。或以指数形式表示， 如 1e-2 。 #include int main(int argc, char const *argv[]) { printf(\"%f\\n\", 123.4); printf(\"%f\\n\", 1e-2); return 0; } 一个字符常量是一个整数，书写时将一个字符括在单引号中，字符在机器字符集中的数值就是字符常量的值。字符常量一般用来与其他字符进行比较，但也可以像其他整数一样参与数值运算。 #include int main(int argc, char const *argv[]) { printf(\"%c\\n\", 'A'); printf(\"%d\\n\", 'A'); return 0; } 字符常量 \\0 表示值为 0 的字符，也就是空字符 null 。 #include int main(int argc, char const *argv[]) { printf(\"%c\\n\", '\\0'); printf(\"%d\\n\", '\\0'); return 0; } 常量表达式是仅仅包含常量的表达式，这种表达式在编译时求值，而不在运行时求值。 #include int main(int argc, char const *argv[]) { int a[1 + 2 + 3]; return 0; } 字符串常量也叫字符串字面值，是用双引号括起来的 0 个或多个字符组成的字符序列。 #include int main(int argc, char const *argv[]) { printf(\"%s\\n\", \"I am a string.\"); return 0; } 编译时可以将多个字符串常量连接起来。 #include int main(int argc, char const *argv[]) { printf(\"%s\\n\", \"Hello \" \"World!\"); return 0; } 枚举是一个常量整型值的列表。 #include int main(int argc, char const *argv[]) { enum months {JAN = 1, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC}; printf(\"%d\\n\", JUL); return 0; } "},"docs/类型、运算符与表达式/声明.html":{"url":"docs/类型、运算符与表达式/声明.html","title":"声明","keywords":"","body":"声明 "}}